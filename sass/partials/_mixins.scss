/**
 * brandung mixins.scss v2.0.0
 *
 * Copyright brandung GmbH & Co.KG
 * http://www.brandung.de/
 *
 * Date: 2014-09-23
 * MIT License (MIT)
 */


/* ==========================================================================
   Mixins
   ========================================================================== */

/**
 * Calculate percent value to given property
 *
 * @param {string} $cssProperty - which property
 * @param {number} $targetSize - element size in pixel
 * @param {number} $contextSize - context element size in pixel
 * @param {boolean} $important - set !important property
 *
 */
@mixin calculatePercentValueOfProperty($cssProperty, $targetSize, $contextSize, $important: false) {
	@if $important == true {
		#{$cssProperty}: percentage($targetSize/$contextSize) !important;
	} @else {
		#{$cssProperty}: percentage($targetSize/$contextSize);
	}
}


/**
 * Calculate PX font size to REM
 *
 * - add PX fallback for older browser
 *
 * @param {number} $size - element size in pixel
 * @param {number} $base - body font size in pixel
 *
 */
@mixin fontSizeREM($size: $body-font-size-px, $base: $base-em) {
	font-size: $size + px;
	font-size: ($size / $base) + rem;
}


/**
 * Calculates given px value to rem value
 *
 * @param {string} $prop - css property name, e.g. font-size, line-height; Default: 'font-size'
 * @param {number} $size - size in px; Default: $body-font-size-px
 *
 */
@mixin propToREM($prop: 'font-size', $size: $body-font-size-px) {
	#{$prop}: $size + px;
	#{$prop}: ($size / $base-em) + rem;
}


/**
* Mixin for adding vendor prefixes to CSS attributes; useful for the following CSS attributes
*
* - border-radius
* - box-shadow
* - transition
* - transform
* - background-size
* - box-sizing
* - animate
*
* @param {string} $attribute - CSS attribute that needs vendor prefixes, e.g. border-radius or transition
* @param {string} $value - The specific CSS value, e.g. "translateX .2s ease-out"
*/
$prefixes: ("-webkit-","-moz-", "-o-", "-ms-", "");
@mixin prefix($attribute, $value) {
	@each $prefix in $prefixes {
		#{$prefix}#{$attribute}:unquote(#{$value});
	}
}


/**
* Mixin for adding svg background image + png fallback
*
* - add png fallback for older browser
*
* @param {string} $name - image name
* @param {string} $extension - file extension + folder
* @param {string} $color - background-color
* @param {number} $position - background position
* @param {string} $repeat - background repeat
*
* @require $old-ie variable from _sass-ie.scss
*
* Use:
* @include svg-bg('logo')
* @include svg-bg('logo', $color: #fff, ...);
*
*/
@mixin svgBG($name: image-name, $extension: png, $color: transparent, $position: 0 0, $repeat: no-repeat) {
	@if $old-ie {
		background: url(../img/#{$extension}/#{$name}.#{$extension}) $color $position $repeat;
	} @else {
		background: url(../img/svg/#{$name}.svg) $color $position $repeat;
	}
}

/**
* Clearfix
*
* For modern browsers
* 1. The space content is one way to avoid an Opera bug when the
*     contenteditable attribute is included anywhere else in the document.
*     Otherwise it causes space to appear at the top and bottom of elements
*     that are clearfixed.
* 2. The use of `table` rather than `block` is only necessary if using
*     `:before` to contain the top-margins of child elements.
*
* Source: http://nicolasgallagher.com/micro-clearfix-hack/
*/
@mixin clearfix() {
	&:before,
	&:after {
		content: " "; // 1
		display: table; // 2
	}

	&:after {
		clear: both;
	}
}

@mixin respondMin($width) {
	@media screen and (min-width: $width) {
		@content;
	}
}

@mixin respondMax($width) {
	@media screen and (max-width: $width) {
		@content;
	}
}
